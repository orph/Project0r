user www-data www-data;
worker_processes 1;

error_log /opt/vid/nginx/log/error.log;
pid /opt/vid/nginx/log/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
}

http {
    # Enumerate all the Tornado servers here
    upstream frontends {
        server 127.0.0.1:8889;
    }

    include /opt/vid/nginx/mime.types;
    default_type application/octet-stream;

    access_log /opt/vid/nginx/log/access.log;

    client_body_temp_path /opt/vid/nginx/log/client_body_temp;
    proxy_temp_path       /opt/vid/nginx/log/proxy_temp;
    fastcgi_temp_path     /opt/vid/nginx/log/fastcgi_temp;

    keepalive_timeout 65;
    proxy_read_timeout 200;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    gzip on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/html text/css text/xml
               application/x-javascript application/xml
               application/atom+xml text/javascript;

    # Only retry if there was a communication error, not a timeout
    # on the Tornado server (to avoid propagating "queries of death"
    # to all frontends)
    proxy_next_upstream error;

    server {
        listen 80;

        # Allow file uploads
        client_max_body_size 1000M;

        location / {
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://frontends;
        }

        location /upload {
            upload_pass /;

            # Store files to this directory
            # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
            upload_store /opt/vid/upload 1;

            # Allow uploaded files to be read by everyone
            upload_store_access user:rw group:rw all:rw;

            # Set specified fields in request body
            # this puts the orginal filename, new path+filename and content type in the requests params
            upload_set_form_field $upload_field_name.name "$upload_file_name";
            upload_set_form_field $upload_field_name.content_type "$upload_content_type";
            upload_set_form_field $upload_field_name.path "$upload_tmp_path";

            # pass through any other fields from the original request.
            # allow forgery protection to be used
            upload_pass_form_field "^authenticity_token$";
        }
    }
}
